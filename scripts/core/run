#!/usr/bin/env bash
set -e

SCRIPTS_DIR="$(readlink -f "$(dirname "$0")")/.."

# shellcheck source=build/scripts/common.sh
. "${SCRIPTS_DIR}/common.sh"
#parse_env_args
# just an excerpt
if [ -z "${DEVICE:-}" ]; then
	echo "DEVICE is required to be in env" && exit 1
fi
if [ -z "${BUILDDIR:-}" ]; then
	mkdir -p "${SCRIPTS_DIR}/../builds"
	BUILDDIR="${SCRIPTS_DIR}/../builds/openwrt-${DEVICE}"
fi

[ -z "${DOCKER_IMAGE:-}" ] && DOCKER_IMAGE="openwrt-builder"

# Prepare separate cache directories for each environment
BUILDDIR_SUFFIX="$(basename "${BUILDDIR}")"

if [ -z "${CCACHE_TARGET_STORAGE:-}" ]; then
	CCACHE_TARGET_STORAGE="${SCRIPTS_DIR}/../builds/ccache-target-storage/${BUILDDIR_SUFFIX}"
	[ -d "${CCACHE_TARGET_STORAGE}" ] || mkdir -p "${CCACHE_TARGET_STORAGE}"
	CCACHE_TARGET_STORAGE="$(readlink -f "${CCACHE_TARGET_STORAGE}")"

	echo "max_size = 0" >"${CCACHE_TARGET_STORAGE}/ccache.conf"
fi

if [ -z "${CCACHE_HOST_STORAGE:-}" ]; then
	CCACHE_HOST_STORAGE="${SCRIPTS_DIR}/../builds/sccache-host-storage/${BUILDDIR_SUFFIX}"
	[ -d "${CCACHE_HOST_STORAGE}" ] || mkdir -p "${CCACHE_HOST_STORAGE}"
	CCACHE_HOST_STORAGE="$(readlink -f "${CCACHE_HOST_STORAGE}")"
fi

ADDITIONAL_DOCKER_FLAGS="${ADDITIONAL_DOCKER_FLAGS:-}"
if [[ "${INTERACTIVE_USAGE:-}" == "true" ]]; then
	ADDITIONAL_DOCKER_FLAGS="-t"
fi

if [[ "${NETWORK_LAYOUT_BUILD_SCRIPTS_CORE_RUN:-}" != "true" ]]; then
	env_tmpfile="$(mktemp)"
	env >"${env_tmpfile}"
	# Pass the whole env to the container
	# TODO: This should probably be limited to an allow-list of variables we actually care about
	export ADDITIONAL_DOCKER_FLAGS="${ADDITIONAL_DOCKER_FLAGS} --env-file ${env_tmpfile}"

	# See https://github.com/moby/moby/issues/45436 for details regarding ulimit
	# Without it the fakeroot initialisation is insanely slow
	# shellcheck disable=SC2086
	exec docker run --rm -i $ADDITIONAL_DOCKER_FLAGS \
		--ulimit 'nofile=1024:1048576' \
		-e "SCCACHE_CACHE_SIZE=50G" \
		-e "NETWORK_LAYOUT_BUILD_SCRIPTS_CORE_RUN=true" \
		-v "${PWD}:${PWD}" \
		-v "${CCACHE_TARGET_STORAGE}:/ccache-storage" \
		-v "${CCACHE_HOST_STORAGE}:/home/builder/.cache/sccache" \
		"${DOCKER_IMAGE}" "$@"
else
	# We are already in the container, don't nest
	echoerr "scripts/core/run called from within the container: $*"
	exec "$@"
fi
