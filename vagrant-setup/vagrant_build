#!/usr/bin/env bash

# Just run `vagrant_build <command you want to run remotely>`
# e.g. `vagrant_build ls`
# Remember that you need to do the proper escapes

set -euxo pipefail

RUNDIR="$(readlink -f "$(dirname "$0")")"

pushd "${RUNDIR}"
ssh_config="$(mktemp)"
vagrant ssh-config >"${ssh_config}"

pushd "${RUNDIR}/../.."

# Sync everything from local working dir
rsync -e "ssh -F ${ssh_config}" -v --mkpath -aR --delete --exclude "build/builds" --exclude "build/outputs" ./ "default:/home/vagrant/network_layout/"

# shellcheck disable=SC2087
ssh -F "${ssh_config}" "default" bash <<EOF
cd network_layout/build
$@
EOF

pushd build
BUILD_DIRS=$(
	ssh -F "${ssh_config}" "default" bash <<EOF
if [ -d "network_layout/build/builds" ]; then
    cd network_layout/build/builds
    # TODO: better builds directory layout
    ls | grep openwrt
fi
EOF
)

if [ -n "$BUILD_DIRS" ]; then
	for build_dir in $BUILD_DIRS; do
		rsync -e "ssh -F ${ssh_config}" -v -a --mkpath --delete "default:/home/vagrant/network_layout/build/builds/${build_dir}/bin/" "./outputs/${build_dir}/bin"
	done
fi
